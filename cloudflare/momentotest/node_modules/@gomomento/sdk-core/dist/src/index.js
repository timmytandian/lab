"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheDelete = exports.CacheSetIfNotExists = exports.CacheSet = exports.CacheListRetain = exports.CacheListRemoveValue = exports.CacheListPushFront = exports.CacheListPushBack = exports.CacheListPopFront = exports.CacheListPopBack = exports.CacheListLength = exports.CacheListFetch = exports.CacheListConcatenateFront = exports.CacheListConcatenateBack = exports.CacheGet = exports.EnvMomentoTokenProvider = exports.StringMomentoTokenProvider = exports.CredentialProvider = exports.LeaderboardOrder = exports.SortedSetOrder = exports.WebhookDestinationType = exports.PostUrlWebhookDestination = exports.ItemType = exports.CollectionTtl = exports.ExpiresAt = exports.ExpiresIn = exports.DisposableTokenScopes = exports.TokenScopes = exports.PermissionScopes = exports.isCacheItemKeyPrefix = exports.isCacheItemKey = exports.AllCacheItems = exports.AllTopics = exports.AllCaches = exports.isTopicName = exports.isCacheName = exports.AllDataReadWrite = exports.TopicRole = exports.CacheRole = exports.VectorSimilarityMetric = exports.VECTOR_DEFAULT_TOPK = exports.ALL_VECTOR_METADATA = exports.NoopMomentoLoggerFactory = exports.NoopMomentoLogger = exports.VectorIndexInfo = exports.webhook = exports.leaderboard = exports.VectorFilterExpressions = exports.VectorFilterExpression = exports.vectorFilters = exports.vector = void 0;
exports.MomentoErrorCode = exports.GenerateDisposableToken = exports.RefreshAuthToken = exports.RefreshApiKey = exports.GenerateAuthToken = exports.GenerateApiKey = exports.TopicItem = exports.TopicSubscribe = exports.TopicPublish = exports.CacheInfo = exports.CacheDecreaseTtl = exports.CacheIncreaseTtl = exports.CacheUpdateTtl = exports.CacheKeysExist = exports.CacheKeyExists = exports.CacheItemGetTtl = exports.CacheItemGetType = exports.CacheSortedSetLengthByScore = exports.CacheSortedSetLength = exports.CacheSortedSetRemoveElements = exports.CacheSortedSetRemoveElement = exports.CacheSortedSetIncrementScore = exports.CacheSortedSetGetScores = exports.CacheSortedSetGetScore = exports.CacheSortedSetGetRank = exports.CacheSortedSetFetch = exports.CacheSortedSetPutElements = exports.CacheSortedSetPutElement = exports.CacheSetRemoveElement = exports.CacheSetRemoveElements = exports.CacheSetAddElement = exports.CacheSetAddElements = exports.CacheDictionaryLength = exports.CacheDictionaryIncrement = exports.CacheDictionaryRemoveFields = exports.CacheDictionaryRemoveField = exports.CacheDictionaryGetFields = exports.CacheDictionaryGetField = exports.CacheDictionarySetFields = exports.CacheDictionarySetField = exports.CacheDictionaryFetch = exports.CacheSetFetch = exports.RevokeSigningKey = exports.ListSigningKeys = exports.CreateSigningKey = exports.CacheIncrement = exports.ListCaches = exports.DeleteCache = exports.CreateCache = exports.CacheFlush = void 0;
exports.UnknownError = exports.NotFoundError = exports.PermissionError = exports.BadRequestError = exports.TimeoutError = exports.ServerUnavailableError = exports.UnknownServiceError = exports.InvalidArgumentError = exports.InternalServerError = exports.LimitExceededError = exports.FailedPreconditionError = exports.CancelledError = exports.AuthenticationError = exports.AlreadyExistsError = exports.SdkError = void 0;
// Cache Client Response Types
const CacheGet = require("./messages/responses/cache-get");
exports.CacheGet = CacheGet;
const CacheListConcatenateBack = require("./messages/responses/cache-list-concatenate-back");
exports.CacheListConcatenateBack = CacheListConcatenateBack;
const CacheListConcatenateFront = require("./messages/responses/cache-list-concatenate-front");
exports.CacheListConcatenateFront = CacheListConcatenateFront;
const CacheListFetch = require("./messages/responses/cache-list-fetch");
exports.CacheListFetch = CacheListFetch;
const CacheListLength = require("./messages/responses/cache-list-length");
exports.CacheListLength = CacheListLength;
const CacheListPopBack = require("./messages/responses/cache-list-pop-back");
exports.CacheListPopBack = CacheListPopBack;
const CacheListPopFront = require("./messages/responses/cache-list-pop-front");
exports.CacheListPopFront = CacheListPopFront;
const CacheListPushBack = require("./messages/responses/cache-list-push-back");
exports.CacheListPushBack = CacheListPushBack;
const CacheListPushFront = require("./messages/responses/cache-list-push-front");
exports.CacheListPushFront = CacheListPushFront;
const CacheListRemoveValue = require("./messages/responses/cache-list-remove-value");
exports.CacheListRemoveValue = CacheListRemoveValue;
const CacheListRetain = require("./messages/responses/cache-list-retain");
exports.CacheListRetain = CacheListRetain;
const CacheSet = require("./messages/responses/cache-set");
exports.CacheSet = CacheSet;
const CacheDelete = require("./messages/responses/cache-delete");
exports.CacheDelete = CacheDelete;
const CacheFlush = require("./messages/responses/cache-flush");
exports.CacheFlush = CacheFlush;
const CreateCache = require("./messages/responses/create-cache");
exports.CreateCache = CreateCache;
const DeleteCache = require("./messages/responses/delete-cache");
exports.DeleteCache = DeleteCache;
const ListCaches = require("./messages/responses/list-caches");
exports.ListCaches = ListCaches;
const CreateSigningKey = require("./messages/responses/create-signing-key");
exports.CreateSigningKey = CreateSigningKey;
const ListSigningKeys = require("./messages/responses/list-signing-keys");
exports.ListSigningKeys = ListSigningKeys;
const RevokeSigningKey = require("./messages/responses/revoke-signing-key");
exports.RevokeSigningKey = RevokeSigningKey;
const CacheSetFetch = require("./messages/responses/cache-set-fetch");
exports.CacheSetFetch = CacheSetFetch;
const CacheDictionaryFetch = require("./messages/responses/cache-dictionary-fetch");
exports.CacheDictionaryFetch = CacheDictionaryFetch;
const CacheDictionarySetField = require("./messages/responses/cache-dictionary-set-field");
exports.CacheDictionarySetField = CacheDictionarySetField;
const CacheDictionarySetFields = require("./messages/responses/cache-dictionary-set-fields");
exports.CacheDictionarySetFields = CacheDictionarySetFields;
const CacheDictionaryGetField = require("./messages/responses/cache-dictionary-get-field");
exports.CacheDictionaryGetField = CacheDictionaryGetField;
const CacheDictionaryGetFields = require("./messages/responses/cache-dictionary-get-fields");
exports.CacheDictionaryGetFields = CacheDictionaryGetFields;
const CacheDictionaryRemoveField = require("./messages/responses/cache-dictionary-remove-field");
exports.CacheDictionaryRemoveField = CacheDictionaryRemoveField;
const CacheDictionaryRemoveFields = require("./messages/responses/cache-dictionary-remove-fields");
exports.CacheDictionaryRemoveFields = CacheDictionaryRemoveFields;
const CacheDictionaryIncrement = require("./messages/responses/cache-dictionary-increment");
exports.CacheDictionaryIncrement = CacheDictionaryIncrement;
const CacheDictionaryLength = require("./messages/responses/cache-dictionary-length");
exports.CacheDictionaryLength = CacheDictionaryLength;
const CacheSetAddElements = require("./messages/responses/cache-set-add-elements");
exports.CacheSetAddElements = CacheSetAddElements;
const CacheSetAddElement = require("./messages/responses/cache-set-add-element");
exports.CacheSetAddElement = CacheSetAddElement;
const CacheSetRemoveElements = require("./messages/responses/cache-set-remove-elements");
exports.CacheSetRemoveElements = CacheSetRemoveElements;
const CacheSetRemoveElement = require("./messages/responses/cache-set-remove-element");
exports.CacheSetRemoveElement = CacheSetRemoveElement;
const CacheIncrement = require("./messages/responses/cache-increment");
exports.CacheIncrement = CacheIncrement;
const CacheSetIfNotExists = require("./messages/responses/cache-set-if-not-exists");
exports.CacheSetIfNotExists = CacheSetIfNotExists;
const CacheSortedSetPutElement = require("./messages/responses/cache-sorted-set-put-element");
exports.CacheSortedSetPutElement = CacheSortedSetPutElement;
const CacheSortedSetPutElements = require("./messages/responses/cache-sorted-set-put-elements");
exports.CacheSortedSetPutElements = CacheSortedSetPutElements;
const CacheSortedSetFetch = require("./messages/responses/cache-sorted-set-fetch");
exports.CacheSortedSetFetch = CacheSortedSetFetch;
const CacheSortedSetGetRank = require("./messages/responses/cache-sorted-set-get-rank");
exports.CacheSortedSetGetRank = CacheSortedSetGetRank;
const CacheSortedSetGetScore = require("./messages/responses/cache-sorted-set-get-score");
exports.CacheSortedSetGetScore = CacheSortedSetGetScore;
const CacheSortedSetGetScores = require("./messages/responses/cache-sorted-set-get-scores");
exports.CacheSortedSetGetScores = CacheSortedSetGetScores;
const CacheSortedSetIncrementScore = require("./messages/responses/cache-sorted-set-increment-score");
exports.CacheSortedSetIncrementScore = CacheSortedSetIncrementScore;
const CacheSortedSetRemoveElement = require("./messages/responses/cache-sorted-set-remove-element");
exports.CacheSortedSetRemoveElement = CacheSortedSetRemoveElement;
const CacheSortedSetRemoveElements = require("./messages/responses/cache-sorted-set-remove-elements");
exports.CacheSortedSetRemoveElements = CacheSortedSetRemoveElements;
const CacheSortedSetLength = require("./messages/responses/cache-sorted-set-length");
exports.CacheSortedSetLength = CacheSortedSetLength;
const CacheSortedSetLengthByScore = require("./messages/responses/cache-sorted-set-length-by-score");
exports.CacheSortedSetLengthByScore = CacheSortedSetLengthByScore;
const CacheItemGetType = require("./messages/responses/cache-item-get-type");
exports.CacheItemGetType = CacheItemGetType;
const CacheItemGetTtl = require("./messages/responses/cache-item-get-ttl");
exports.CacheItemGetTtl = CacheItemGetTtl;
const CacheKeyExists = require("./messages/responses/cache-key-exists");
exports.CacheKeyExists = CacheKeyExists;
const CacheKeysExist = require("./messages/responses/cache-keys-exist");
exports.CacheKeysExist = CacheKeysExist;
const CacheUpdateTtl = require("./messages/responses/cache-ttl-update");
exports.CacheUpdateTtl = CacheUpdateTtl;
const CacheIncreaseTtl = require("./messages/responses/cache-ttl-increase");
exports.CacheIncreaseTtl = CacheIncreaseTtl;
const CacheDecreaseTtl = require("./messages/responses/cache-ttl-decrease");
exports.CacheDecreaseTtl = CacheDecreaseTtl;
// TopicClient Response Types
const TopicPublish = require("./messages/responses/topic-publish");
exports.TopicPublish = TopicPublish;
const TopicSubscribe = require("./messages/responses/topic-subscribe");
exports.TopicSubscribe = TopicSubscribe;
const topic_item_1 = require("./messages/responses/topic-item");
Object.defineProperty(exports, "TopicItem", { enumerable: true, get: function () { return topic_item_1.TopicItem; } });
// AuthClient Response Types
const GenerateApiKey = require("./messages/responses/generate-api-key");
exports.GenerateApiKey = GenerateApiKey;
exports.GenerateAuthToken = GenerateApiKey;
const RefreshApiKey = require("./messages/responses/refresh-api-key");
exports.RefreshApiKey = RefreshApiKey;
exports.RefreshAuthToken = RefreshApiKey;
const GenerateDisposableToken = require("./messages/responses/generate-disposable-token");
exports.GenerateDisposableToken = GenerateDisposableToken;
// VectorClient Response Types
exports.vector = require("./messages/responses/vector");
__exportStar(require("./messages/responses/vector"), exports);
exports.vectorFilters = require("./messages/vector-index-filters");
var vector_index_filters_1 = require("./messages/vector-index-filters");
Object.defineProperty(exports, "VectorFilterExpression", { enumerable: true, get: function () { return vector_index_filters_1.VectorFilterExpression; } });
Object.defineProperty(exports, "VectorFilterExpressions", { enumerable: true, get: function () { return vector_index_filters_1.VectorFilterExpressions; } });
// Leaderboard Response Types
exports.leaderboard = require("./messages/responses/leaderboard");
__exportStar(require("./messages/responses/leaderboard"), exports);
exports.webhook = require("./messages/responses/webhook");
__exportStar(require("./messages/responses/webhook"), exports);
const cache_info_1 = require("./messages/cache-info");
Object.defineProperty(exports, "CacheInfo", { enumerable: true, get: function () { return cache_info_1.CacheInfo; } });
var vector_index_info_1 = require("./messages/vector-index-info");
Object.defineProperty(exports, "VectorIndexInfo", { enumerable: true, get: function () { return vector_index_info_1.VectorIndexInfo; } });
const utils_1 = require("./utils");
Object.defineProperty(exports, "CollectionTtl", { enumerable: true, get: function () { return utils_1.CollectionTtl; } });
Object.defineProperty(exports, "SortedSetOrder", { enumerable: true, get: function () { return utils_1.SortedSetOrder; } });
Object.defineProperty(exports, "LeaderboardOrder", { enumerable: true, get: function () { return utils_1.LeaderboardOrder; } });
Object.defineProperty(exports, "ExpiresIn", { enumerable: true, get: function () { return utils_1.ExpiresIn; } });
Object.defineProperty(exports, "ExpiresAt", { enumerable: true, get: function () { return utils_1.ExpiresAt; } });
Object.defineProperty(exports, "ItemType", { enumerable: true, get: function () { return utils_1.ItemType; } });
Object.defineProperty(exports, "PostUrlWebhookDestination", { enumerable: true, get: function () { return utils_1.PostUrlWebhookDestination; } });
Object.defineProperty(exports, "WebhookDestinationType", { enumerable: true, get: function () { return utils_1.WebhookDestinationType; } });
const auth_1 = require("./auth");
Object.defineProperty(exports, "CredentialProvider", { enumerable: true, get: function () { return auth_1.CredentialProvider; } });
Object.defineProperty(exports, "StringMomentoTokenProvider", { enumerable: true, get: function () { return auth_1.StringMomentoTokenProvider; } });
Object.defineProperty(exports, "EnvMomentoTokenProvider", { enumerable: true, get: function () { return auth_1.EnvMomentoTokenProvider; } });
const errors_1 = require("./errors");
Object.defineProperty(exports, "MomentoErrorCode", { enumerable: true, get: function () { return errors_1.MomentoErrorCode; } });
Object.defineProperty(exports, "SdkError", { enumerable: true, get: function () { return errors_1.SdkError; } });
Object.defineProperty(exports, "AlreadyExistsError", { enumerable: true, get: function () { return errors_1.AlreadyExistsError; } });
Object.defineProperty(exports, "AuthenticationError", { enumerable: true, get: function () { return errors_1.AuthenticationError; } });
Object.defineProperty(exports, "CancelledError", { enumerable: true, get: function () { return errors_1.CancelledError; } });
Object.defineProperty(exports, "FailedPreconditionError", { enumerable: true, get: function () { return errors_1.FailedPreconditionError; } });
Object.defineProperty(exports, "LimitExceededError", { enumerable: true, get: function () { return errors_1.LimitExceededError; } });
Object.defineProperty(exports, "InternalServerError", { enumerable: true, get: function () { return errors_1.InternalServerError; } });
Object.defineProperty(exports, "InvalidArgumentError", { enumerable: true, get: function () { return errors_1.InvalidArgumentError; } });
Object.defineProperty(exports, "UnknownServiceError", { enumerable: true, get: function () { return errors_1.UnknownServiceError; } });
Object.defineProperty(exports, "ServerUnavailableError", { enumerable: true, get: function () { return errors_1.ServerUnavailableError; } });
Object.defineProperty(exports, "TimeoutError", { enumerable: true, get: function () { return errors_1.TimeoutError; } });
Object.defineProperty(exports, "BadRequestError", { enumerable: true, get: function () { return errors_1.BadRequestError; } });
Object.defineProperty(exports, "PermissionError", { enumerable: true, get: function () { return errors_1.PermissionError; } });
Object.defineProperty(exports, "NotFoundError", { enumerable: true, get: function () { return errors_1.NotFoundError; } });
Object.defineProperty(exports, "UnknownError", { enumerable: true, get: function () { return errors_1.UnknownError; } });
var noop_momento_logger_1 = require("./config/logging/noop-momento-logger");
Object.defineProperty(exports, "NoopMomentoLogger", { enumerable: true, get: function () { return noop_momento_logger_1.NoopMomentoLogger; } });
Object.defineProperty(exports, "NoopMomentoLoggerFactory", { enumerable: true, get: function () { return noop_momento_logger_1.NoopMomentoLoggerFactory; } });
var IVectorIndexClient_1 = require("./clients/IVectorIndexClient");
Object.defineProperty(exports, "ALL_VECTOR_METADATA", { enumerable: true, get: function () { return IVectorIndexClient_1.ALL_VECTOR_METADATA; } });
Object.defineProperty(exports, "VECTOR_DEFAULT_TOPK", { enumerable: true, get: function () { return IVectorIndexClient_1.VECTOR_DEFAULT_TOPK; } });
var clients_1 = require("./internal/clients");
Object.defineProperty(exports, "VectorSimilarityMetric", { enumerable: true, get: function () { return clients_1.VectorSimilarityMetric; } });
var permission_scope_1 = require("./auth/tokens/permission-scope");
Object.defineProperty(exports, "CacheRole", { enumerable: true, get: function () { return permission_scope_1.CacheRole; } });
Object.defineProperty(exports, "TopicRole", { enumerable: true, get: function () { return permission_scope_1.TopicRole; } });
Object.defineProperty(exports, "AllDataReadWrite", { enumerable: true, get: function () { return permission_scope_1.AllDataReadWrite; } });
Object.defineProperty(exports, "isCacheName", { enumerable: true, get: function () { return permission_scope_1.isCacheName; } });
Object.defineProperty(exports, "isTopicName", { enumerable: true, get: function () { return permission_scope_1.isTopicName; } });
Object.defineProperty(exports, "AllCaches", { enumerable: true, get: function () { return permission_scope_1.AllCaches; } });
Object.defineProperty(exports, "AllTopics", { enumerable: true, get: function () { return permission_scope_1.AllTopics; } });
Object.defineProperty(exports, "AllCacheItems", { enumerable: true, get: function () { return permission_scope_1.AllCacheItems; } });
var disposable_token_scope_1 = require("./auth/tokens/disposable-token-scope");
Object.defineProperty(exports, "isCacheItemKey", { enumerable: true, get: function () { return disposable_token_scope_1.isCacheItemKey; } });
Object.defineProperty(exports, "isCacheItemKeyPrefix", { enumerable: true, get: function () { return disposable_token_scope_1.isCacheItemKeyPrefix; } });
exports.PermissionScopes = require("./auth/tokens/permission-scopes");
/**
 * @deprecated please use PermissionScopes instead
 */
exports.TokenScopes = require("./auth/tokens/permission-scopes");
exports.DisposableTokenScopes = require("./auth/tokens/disposable-token-scopes");
//# sourceMappingURL=data:application/json;base64,